# Ninja file generated by bang (https://codeberg.org/cdsoft/bang)
# bang build.lua -o build.ninja

# Fizzbuzz build system
#
# Targets:
#   help    show this help message
#   all     compile, test and document FizzBuzz
#   clean   clean generated files

builddir = .build
ninja_required_version = 1.11.1

######################################################################
# Project directories
######################################################################

img = img

######################################################################
# Help
######################################################################

######################################################################
# Tests
######################################################################

rule run_test
  command = $in 50 > $out

######################################################################
# Lua test
######################################################################

rule _builddir_tests_fizzbuzz_lua
  command = luax compile -q -o $out $in

build $builddir/tests/fizzbuzz_lua: _builddir_tests_fizzbuzz_lua fizzbuzz.lua
build $builddir/tests/fizzbuzz_lua.txt: run_test $builddir/tests/fizzbuzz_lua

######################################################################
# C test
######################################################################

rule _builddir_tests_fizzbuzz_c
  command = gcc $in -o $out

build $builddir/tests/fizzbuzz_c: _builddir_tests_fizzbuzz_c fizzbuzz.c
build $builddir/tests/fizzbuzz_c.txt: run_test $builddir/tests/fizzbuzz_c

######################################################################
# Haskell test
######################################################################

rule _builddir_tests_fizzbuzz_hs
  command = ghc -outputdir ${out}_tmp $in -o $out

build $builddir/tests/fizzbuzz_hs: _builddir_tests_fizzbuzz_hs fizzbuzz.hs
build $builddir/tests/fizzbuzz_hs.txt: run_test $builddir/tests/fizzbuzz_hs

######################################################################
# Test results
######################################################################

rule check
  command = luax $in 50 > $out

build $builddir/tests/result_lua.lua: check fizzbuzz_test.lua $builddir/tests/fizzbuzz_lua.txt
build $builddir/tests/result_c.lua: check fizzbuzz_test.lua $builddir/tests/fizzbuzz_c.txt
build $builddir/tests/result_hs.lua: check fizzbuzz_test.lua $builddir/tests/fizzbuzz_hs.txt

######################################################################
# Documentation
######################################################################

rule ypp
  command = export LUA_PATH="$builddir/tests/?.lua;./?.lua"; export REQDB="$builddir/reqdb.lua"; export REQTARGET="fizzbuzz.pdf"; ypp -p . -l project_data -l req --MD --MF $depfile $in -o $out
  depfile = $builddir/dependencies/$out.d

rule panda_html
  command = export LUA_PATH="$builddir/tests/?.lua;./?.lua"; export REQDB="$builddir/reqdb.lua"; export REQTARGET="fizzbuzz.pdf"; export PANDA_TARGET=$out; export PANDA_DEP_FILE=$depfile; export LOGO=$logo_html; export PANDOC_USER_DATA_DIRECTORY=`pandoc -v | awk -F': *' '$$1=="User data directory" {print $$2}'`; panda --table-of-content --to html5 --embed-resources --standalone --mathml $in -o $out
  depfile = $builddir/dependencies/$out.d

rule panda_pdf
  command = export LUA_PATH="$builddir/tests/?.lua;./?.lua"; export REQDB="$builddir/reqdb.lua"; export REQTARGET="fizzbuzz.pdf"; export PANDA_TARGET=$out; export PANDA_DEP_FILE=$depfile; export LOGO=$logo_pdf; panda --table-of-content --number-sections --highlight-style tango --top-level-division=chapter $in -o $out
  depfile = $builddir/dependencies/$out.d

rule panda_gfm
  command = export LUA_PATH="$builddir/tests/?.lua;./?.lua"; export REQDB="$builddir/reqdb.lua"; export REQTARGET="fizzbuzz.pdf"; export PANDA_TARGET=$out; export PANDA_DEP_FILE=$depfile; export LOGO=$logo_html; panda --table-of-content --to gfm --number-sections --highlight-style tango --top-level-division=chapter $in -o $out
  depfile = $builddir/dependencies/$out.d

rule panda_beamer
  command = export LUA_PATH="$builddir/tests/?.lua;./?.lua"; export REQDB="$builddir/reqdb.lua"; export REQTARGET="fizzbuzz.pdf"; export PANDA_TARGET=$out; export PANDA_DEP_FILE=$depfile; export LOGO=$logo_pdf; panda --to beamer -V theme:Madrid -V colortheme:default $in -o $out
  depfile = $builddir/dependencies/$out.d

logo_pdf = $builddir/logo.pdf
logo_html = $img/logo.svg

rule lsvg
  command = lsvg $in -o $out --MF $depfile
  depfile = $builddir/$out.d

build $logo_pdf: lsvg logo.lua
build $logo_html: lsvg logo.lua
build $builddir/fizzbuzz.md: ypp fizzbuzz.md | $builddir/tests/result_lua.lua $builddir/tests/result_c.lua $builddir/tests/result_hs.lua
build $builddir/fizzbuzz.html: panda_html $builddir/fizzbuzz.md | $logo_html
build $builddir/fizzbuzz.pdf: panda_pdf $builddir/fizzbuzz.md | $logo_pdf
build README.md: panda_gfm $builddir/fizzbuzz.md | $logo_html
build $builddir/fizzbuzz_slideshow.md: ypp fizzbuzz_slideshow.md
build $builddir/fizzbuzz_slideshow.pdf: panda_beamer $builddir/fizzbuzz_slideshow.md | $logo_pdf
build all: phony $builddir/tests/fizzbuzz_lua $builddir/tests/fizzbuzz_lua.txt $builddir/tests/fizzbuzz_c $builddir/tests/fizzbuzz_c.txt $builddir/tests/fizzbuzz_hs $builddir/tests/fizzbuzz_hs.txt $builddir/tests/result_lua.lua $builddir/tests/result_c.lua $builddir/tests/result_hs.lua $logo_pdf $logo_html $builddir/fizzbuzz.html $builddir/fizzbuzz.pdf README.md $builddir/fizzbuzz_slideshow.pdf

default all

######################################################################
# Clean
######################################################################

rule clean-_builddir
  description = CLEAN $builddir
  command = rm -rf $builddir/*

build clean-_builddir: clean-_builddir
build clean: phony clean-_builddir

######################################################################
# Help
######################################################################

rule help
  description = help
  command = echo "Fizzbuzz build system"; $
            echo ""; $
            echo "Targets:"; $
            echo "  help    show this help message"; $
            echo "  all     compile, test and document FizzBuzz"; $
            echo "  clean   clean generated files"

build help: help

######################################################################
# Regenerate build.ninja when build.lua changes
######################################################################

rule bang
  command = bang $in -o $out
  generator = true

build build.ninja: bang build.lua | ./test_config.lua .git/refs/tags
